# Source:  pilot5, Eli Miller, @ July 15, 2025, modified
# Changes made with assistance of gemini LLM.

# Runs 12:01 am, UTC  ( 7:01 pm US East Coast) ,   Friday

name: Verify Templates âœ…

on:
  workflow_dispatch:
  pull_request:
#    types: [opened, reopened, synchronize ] # use synchronize to run on every new commit added to PR
    branches:
      -  main
    paths:
      -  '**.yml'
#  push:
#    branches:
#      - 2506_verify_templates_condensed
  schedule:
    - cron: "1 0 * * 3,5"



run-name: PR Build for ${{ github.event.pull_request.number }} by @${{ github.actor }}


permissions:
  issues: write

jobs:
  verify:
    runs-on: ubuntu-latest
    env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Set US Eastern timezone
        run: sudo timedatectl set-timezone America/New_York

      - name: Echo
        run: echo "This workflow runs every  Friday at 12:01 AM UTC."

# Why this?
#     - name: Check out repository
#       uses: actions/checkout@v4
#       with:
#         ref: ${{ github.event.pull_request.head.ref }} # Checkout the branch of the PR
#         fetch-depth: 0

        # The 'checkout' action is REQUIRED To access files in your repository.
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Print PR details
        run: |
          echo "This workflow is running for PR # ${{ github.event.pull_request.number }}"
          echo "PR Title: ${{ github.event.pull_request.title }}"
          echo "Source Branch: ${{ github.event.pull_request.head.ref }}"
          echo "Target Branch: ${{ github.event.pull_request.base.ref }}"
          echo "Last commit SHA: ${{ github.sha }}"

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspms: true
          packages: |
            any::dplyr

      - uses: quarto-dev/quarto-actions/setup@v2

      - name: Install R dependencies
        run: |
          Rscript -e 'install.packages(c("dplyr", "quarto", "diffdf", "rmarkdown", "tibble", "stringr"), repos = "https://packagemanager.posit.co/cran/__linux__/noble/latest")'

      - name: Run QC script
        run: R -e 'quarto::quarto_render("qcReport.qmd")'

      - name: Run QC summary
        run: Rscript -e 'source("qcSummary.R")'


      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: qcReport.html
          path: qcReport.html

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: qcSummary.txt
          path: qcSummary.txt


      - name: count lines of qcSummary.txt
        run: |
          cat qcSummary.txt | wc -l >> $GITHUB_STEP_SUMMARY
        shell: bash {0}

      - name: qcSummary.html.md lines via bash
        run: |
          cat qcSummary.txt >> $GITHUB_STEP_SUMMARY
        shell: bash {0}

      - name: qcSummary.txt via R, 1
        run: |
          Rscript -e 'readLines("qcSummary.txt") |> cat(sep = "\n")'
        shell: bash {0}

      - name:  qcSummary.html.md cat to console, 2
        run: |
          echo " --- qcSummary.txt ---"
          cat qcSummary.txt
          echo " ------------------"


#      - name: Log qcSummary.html content (if Push or Workflow Dispatch)
#        # This step will run for push or workflow_dispatch events
#        # It logs the content to the workflow run output
#        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
#        run: |
#          echo "--- Content of qcSummary.html.md ---"
#          cat qcSummary.txt
#          echo "-------------------------"



      - name: Create Issue From File
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Verify Templates
          content-filepath: qcSummary.txt
          assignees: jimrothstein, bms63, manciniedoardo
          labels: |
            bug
            automated issue

#      - name: Fail Step if no differences found
#        if: hashFiles('qc.fail') != ''
#        uses: actions/github-script@v3
#        with:
#          script: |
#            core.setFailed('QC Check failed!')
