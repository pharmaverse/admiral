% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_vars_dt_dtm_utils.R
\name{propagate_na_values}
\alias{propagate_na_values}
\title{Propagate NA Values for datetime values}
\usage{
propagate_na_values(partial, is_datetime)
}
\arguments{
\item{partial}{A list of partial date/time components.

\describe{
\item{Default value}{none}
}}

\item{is_datetime}{A logical value indicating whether the input strings include
time information.

\describe{
\item{Default value}{none}
}}
}
\value{
A list of date/time components with propagated NA values.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

This is a helping function for \code{get_dt_dtm_range()}.
Propagates NA values through date/time components.
}
\details{
This function ensures that if a higher-order component (e.g., month) is NA,
all lower-order components (e.g., day, hour, etc.) are also set to NA.
}
\examples{
# Propagate NA values through datetime components
partial_datetime <- list(
  year = "2020", month = NA_character_, day = "01",
  hour = "12", minute = NA_character_, second = "34"
)
propagated_datetime <- propagate_na_values(partial_datetime, is_datetime = TRUE)
print(propagated_datetime)

# Propagate NA values for datetime with missing higher order components
partial_missing <- list(
  year = NA_character_, month = "01", day = "01",
  hour = "12", minute = "00", second = "00"
)
propagated_missing <- propagate_na_values(partial_missing, is_datetime = TRUE)
print(propagated_missing)

partial_missing_date <- list(
  year = "2023", month = NA_character_, day = "01"
)
propagated_missing_date <- propagate_na_values(partial_missing_date, is_datetime = FALSE)
print(propagated_missing_date)

}
\keyword{internal}
