---
title: "Verify Templates Report"
format: html
date: "`r Sys.Date()`"
editor: visual
execute:
  keep-md: true
editor_options: 
  chunk_output_type: console
---

```{r, echo = FALSE}
#library(safetyData)
library(diffdf)
library(tibble)
library(stringr)
#library(haven)
# base is older ds; 
input_path <- "inst/verify/old"
comp_path <- "inst/verify/new"
```

This is the QC report dated `r Sys.Date()`. 

The report compares the ADaM datasets in the `pharmaverseadam` package with the ADaM `datasets generated from templates during this run`.  The datasets are compared using the `diffdf` package.

This run was initiated by `r Sys.getenv("GITHUB_ACTOR")` on the `r Sys.getenv("GITHUB_REF")` Git ref.

```{r session_info}
#| echo: false
sessionInfo()
```

```{r data_load}
#| echo: false

input_dataset_paths <- list.files(input_path)
input_dataset_paths <- input_dataset_paths[endsWith(input_dataset_paths, ".rds") ]
input_dataset_names <- tools::file_path_sans_ext(input_dataset_paths)
comp_dataset_paths <- list.files(comp_path)
#comp_dataset_paths <- comp_dataset_paths[endsWith(comp_dataset_paths, ".xpt") ]
comp_dataset_names <- tools::file_path_sans_ext(comp_dataset_paths)

# restores files to environment
for (i in seq_along(input_dataset_names)) {
  assign(
    paste0("new_", input_dataset_names[i]), 
    readRDS(file.path(input_path, input_dataset_paths[i]))
    )
}

for (i in seq_along(comp_dataset_names)) {
  if (!file.exists(file.path(comp_path, comp_dataset_paths[i]))) {
    next
  }
  assign(
    paste0("comp_", comp_dataset_names[i]), 
    readRDS(file.path(comp_path, comp_dataset_paths[i]))
    )
}

```

`` `r length(input_dataset_names)` `` datasets were found in the `pilot5-submission/pilot5-input/adamdata` directory. The datasets are \``` r input_dataset_names` ``

```{r data_html}
#| echo: false
#| output: false
sink("qc.Rmd")
cat("## Verify Templates Check Complete!", "\n\n")
cat("Date: ", format(Sys.Date()), "\n")
cat("Run by: ", Sys.getenv('GITHUB_ACTOR'), "\n")
cat("Git Ref: ", Sys.getenv("GITHUB_REF"), "\n")
cat("BASE: ", "Generated ADaM Datasets from Templates during Run", "\n")
cat("COMPARE: ", "ADaM Datasets from pharmaverseadam ", "\n")
for (y in input_dataset_names) {
  new_dataset <- paste0("new_", y)
  comp_dataset <- paste0("comp_", y)
  diffs <- diffdf(base = get(comp_dataset), compare =  get(new_dataset))
  diffdf::diffdf_has_issues(diffs)
    
  if (length(diffs) != 0) file.create("qc.fail")
    
  cat("<details>\n")
  status_emoji <- if (length(diffs) == 0) "✅" else "❌"
  cat(str_glue("<summary>{status_emoji} Dataset: {y}</summary>\n\n"))
  cat("\n\n```\n\n")
  print(diffs)
  cat("```\n\n")
  cat("</details>")
   cat("\n\n")
}
sink()
```

```{r data_check}
#| warning: false
#| message: false
#| echo: false
#| output: asis
readLines("qc.Rmd") |>
  cat(sep = "\n")
```
